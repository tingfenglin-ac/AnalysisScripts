% plot 1) spike number, 2) latency of response 3) amplitudes
% before plotting, open a time variable data is necessary
% better not run the whole function. 
% Instead, run every single block (see loading file section)-20200130

clearvars -except time
filesize=0;
FN=cell(0);
FP=cell(0);
SpikeAmpCell=[];
SpikeTimeCell=[];
StimTimeCell=[];
ConditionCell=[];
FileSizeNum=[];
FileSizeNumCell=[];
%% reading file
% step 1: go to the directory of where the *Spike.mat data are
% step 2: select all the pre-tetanus data and click select.
% step 3: the select data interface will pump up again, then select the
% early-post and then do the same thing for the late-post data.
% step 4: go to the directory of *Spike.mat data in the other days, and the
% do the same things

f=1;
while f
    [FileName,FolderPath] = uigetfile({'*Spike.mat;*Spikelist.mat'},'Select SpikeData files', 'Multiselect', 'on');
    
    if FolderPath==0;f=0;end
    
    if iscell(FileName)
        NewAddFile=size(FileName,2);
    elseif FileName~=0
        NewAddFile=1;
        if strfind(FileName,'Spikelist')
            load([FolderPath,FileName])
            NewAddFile=size(FN,1);
        end
    else
        NewAddFile=0;
    end
    
    if NewAddFile~=0;
        if ~size(strfind(FileName,'Spikelist'),1)|iscell(FileName)
            for fnumber=1:NewAddFile
                if iscell(FileName)
                    FN=cat(1,FN,FileName{fnumber});
                else
                    FN=cat(1,FN,FileName);
                end
                FP=cat(1,FP,FolderPath);
            end
        end
        
        if iscell(FileName)
            Import_data=cellfun(@(x,y) importdata([x,y]),FP(filesize+1:filesize+NewAddFile),FN(filesize+1:filesize+NewAddFile));
        else
            if strfind(FileName,'Spikelist')
                Import_data=cellfun(@(x,y) importdata([x,y]),FP,FN);
            else
                Import_data=cellfun(@(x,y) importdata([x,y]),FP(filesize+1:filesize+NewAddFile),FN(filesize+1:filesize+NewAddFile));
            end
        end
        
        filesize=filesize+NewAddFile;
        
        if ~size(strfind(FileName,'Spikelist'),1)
            SpikeAmp=vertcat(Import_data.SponSpikeAmp);
            SpikeAmp=arrayfun(@(x) vertcat(SpikeAmp{:,x}),1:size(SpikeAmp,2),'uni',0);
            
            SpikeTime=vertcat(Import_data.SponSpikeTime);
            SpikeTime=arrayfun(@(x) vertcat(SpikeTime{:,x}),1:size(SpikeTime,2),'uni',0);
        
            StimTime=mean(vertcat(Import_data.StimTime));
            StimTimeCell=horzcat(StimTimeCell,cellfun(@(x) StimTime.*ones(size(x)),SpikeAmp,'uni',0));
            
        else
            SpikeAmp=horzcat(Import_data(:).SponSpikeAmp);
            
            SpikeTime=horzcat(Import_data(:).SponSpikeTime);
            
            StimTime=arrayfun(@(x) ones(size(Import_data(x).SponSpikeAmp)).*Import_data(x).StimTime,1:size(Import_data,1),'uni',0);
            StimTime=num2cell(horzcat(StimTime{:}))
            
        end
        
        

        SpikeAmpCell=horzcat(SpikeAmpCell,SpikeAmp);
        SpikeTimeCell=horzcat(SpikeTimeCell,SpikeTime);
        StimTimeCell=horzcat(StimTimeCell,StimTime);
        
        FileSizeNum=cellfun(@(x) length(find(diff(x(:,1))<0))+1,SpikeTime,'uni',0)
        FileSizeNumCell=horzcat(FileSizeNumCell,FileSizeNum);
        
        ConditionCell=horzcat(ConditionCell,f.*ones(size(SpikeAmp)));
        f=f+1;
        
    end
end


%% plotting the spike number within "window" sec after stim
window=[0.2 0.3];
figure
co=colormap(lines);
% co=[71, 97, 157;...
%     209, 55, 107;...
%     255, 164, 57;...
%     57, 195, 177]./255;
interval=mean(diff(time));

x=1:3;
t=cellfun(@(x,y) x(:,1)-y,SpikeTimeCell,StimTimeCell,'uni',0);
y=[];
for n=x
y(n,:)=cellfun(@(a,b) sum(a>window(1) & a<window(2))./(b.*diff(window)),t(ConditionCell==n),FileSizeNumCell(ConditionCell==n));
end

coNum=2;
hold on
for n=1:size(y,2)
%     coNum=n+2;
    jitterx=x'+0.*rand(size(x'))
scatter(jitterx,y(:,n),200,...
    'MarkerFaceColor','flat',...
    'MarkerEdgeColor','flat',...
    'MarkerFaceAlpha',0.2,...
    'MarkerEdgeAlpha',0.2,...
    'MarkerFaceColor',co(coNum,:));
h=plot(jitterx,y(:,n),...
    'color',co(coNum,:),...
    'LineWidth',3)
h.Color(4) = 0.2;
end
%%
hold on
ymean=mean(y,2);
ystd=std(y,0,2)
errorbar(x,ymean,ystd,'o-',...
    'MarkerSize',18,...
    'MarkerFaceColor',[.3 .3 .3],...
    'Color',[.3 .3 .3],...
    'LineWidth',3);

%% stat
[p,~,stats] = anova1(y',[],'off');
[multistats] = multcompare(stats,'Display','off');
arrayfun(@(x) plot([multistats(x,1) multistats(x,2)],[7 7]+x,...
    'Color',[.3 .3 .3],...
    'LineWidth',3),...
    find(multistats(:,6)<0.05),'uni',0)
arrayfun(@(x) text(mean([multistats(x,1) multistats(x,2)]),7.1+x,'*',...
    'HorizontalAlignment','center',...
    'FontSize',30),...
    find(multistats(:,6)<0.05),'uni',0)



%%
xticks(1:3)
xticklabels({'Pre','Early','Late'});
ylim([0 10])
xlim([0.8 3.2])

ylabel('Spike frequency (hz)')
set(gca,'FontSize',18)
set(gcf,'color',[1 1 1])

%% plotting the probability within "window" sec after stim
figure

x=1:3;
t=cellfun(@(x,y) x(:,1)-y,SpikeTimeCell,StimTimeCell,'uni',0);
y=[];
for n=x
y(n,:)=cellfun(@(a,b) logical(a>window(1) & a<window(2))./b,t(ConditionCell==n),FileSizeNumCell(ConditionCell==n));
end

coNum=2;
hold on
for n=1:size(y,2)
%     coNum=n+2;
    jitterx=x'+0.*rand(size(x'))
scatter(jitterx,y(:,n),200,...
    'MarkerFaceColor','flat',...
    'MarkerEdgeColor','flat',...
    'MarkerFaceAlpha',0.2,...
    'MarkerEdgeAlpha',0.2,...
    'MarkerFaceColor',co(coNum,:));
h=plot(jitterx,y(:,n),...
    'color',co(coNum,:),...
    'LineWidth',3)
h.Color(4) = 0.2;
end
%%
hold on
ymean=mean(y,2);
ystd=std(y,0,2)
errorbar(x,ymean,ystd,'o-',...
    'MarkerSize',18,...
    'MarkerFaceColor',[.3 .3 .3],...
    'Color',[.3 .3 .3],...
    'LineWidth',3);

%% stat
[p,~,stats] = anova1(y',[],'off');
[multistats] = multcompare(stats,'Display','off');
arrayfun(@(x) plot([multistats(x,1) multistats(x,2)],[7 7]+x,...
    'Color',[.3 .3 .3],...
    'LineWidth',3),...
    find(multistats(:,6)<0.05),'uni',0)
arrayfun(@(x) text(mean([multistats(x,1) multistats(x,2)]),7.1+x,'*',...
    'HorizontalAlignment','center',...
    'FontSize',30),...
    find(multistats(:,6)<0.05),'uni',0)



%%
xticks(1:3)
xticklabels({'Pre','Early','Late'});
ylim([0 10])
xlim([0.8 3.2])

ylabel('Spike frequency (hz)')
set(gca,'FontSize',18)
set(gcf,'color',[1 1 1])

%% plotting the latency of response
figure

for n=x
y(n,:)=cellfun(@(a,b) nanmean(a(a>window(1) & a<window(2))).*1000,t(ConditionCell==n));
end

hold on
for n=1:size(y,2)
%         coNum=n+2;

    jitterx=x'+0.*rand(size(x'))
scatter(jitterx,y(:,n),200,...
    'MarkerFaceColor','flat',...
    'MarkerEdgeColor','flat',...
    'MarkerFaceAlpha',0.2,...
    'MarkerEdgeAlpha',0.2,...
    'MarkerFaceColor',co(coNum,:));
h=plot(jitterx,y(:,n),...
    'color',co(coNum,:),...
    'LineWidth',3);
h.Color(4) = 0.2;

end
%%
hold on
ymean=nanmean(y,2);
ystd=nanstd(y,0,2)
errorbar(x,ymean,ystd,'o-',...
    'MarkerSize',18,...
    'MarkerFaceColor',[.3 .3 .3],...
    'Color',[.3 .3 .3],...
    'LineWidth',3);
%% stat
[p,~,stats] = anova1(y',[],'off');
[multistats] = multcompare(stats,'Display','off');
%%
xticks(1:3)
xticklabels({'Pre','Early','Late'});
ylim([0 350])
xlim([0.8 3.2])

ylabel('Latency of response (ms)')
set(gca,'FontSize',18)
set(gcf,'color',[1 1 1])

%% plotting the amp
figure

y=[];
for n=x
y(n,:)=cellfun(@(a,b) mean(b(a>window(1) & a<window(2))),t(ConditionCell==n),SpikeAmpCell(ConditionCell==n));
end

hold on
for n=1:size(y,2)
%         coNum=n+2;

    jitterx=x'+0.*rand(size(x'))
scatter(jitterx,y(:,n),200,...
    'MarkerFaceColor','flat',...
    'MarkerEdgeColor','flat',...
    'MarkerFaceAlpha',0.2,...
    'MarkerEdgeAlpha',0.2,...
    'MarkerFaceColor',co(coNum,:));
h=plot(jitterx,y(:,n),...
    'color',co(coNum,:),...
    'LineWidth',3)
h.Color(4) = 0.2;

end
%%
hold on
ymean=nanmean(y,2);
ystd=nanstd(y,0,2)
errorbar(x,ymean,ystd,'o-',...
    'MarkerSize',18,...
    'MarkerFaceColor',[.3 .3 .3],...
    'Color',[.3 .3 .3],...
    'LineWidth',3);

%% stat
[p,~,stats] = anova1(y',[],'off');
[multistats] = multcompare(stats,'Display','off');


%%
xticks(1:3)
xticklabels({'Pre','Early','Late'});
ylim([0 1.5])
xlim([0.8 3.2])

ylabel('Ampitude (dF/F0)')
set(gca,'FontSize',18)
set(gcf,'color',[1 1 1])